sim$mean[i] <- mean(rexp(n, lamda))
sim$var[i] <- var(rexp(n, lamda))
}
hist(sim$mean)
abline(v=`r 1/lamda`)
abline(v=1/lamda)
hist(sim$mean,main = "Histogram of sample mean", xlab = "Sample mean" )
abline(v=1/lamda,col="red",lwd=2)
text(0.52,250,"Theoretical mean = 0.5", col = "red")
text(0.62,250,"Theoretical mean = 0.5", col = "red")
hist(sim$mean,main = "Histogram of sample mean", xlab = "Sample mean" )
abline(v=1/lamda,col="red",lwd=3)
text(0.66,250,"Theoretical mean = 0.5", col = "red")
lamda <- 0.2
n <- 40
nosim <- 1000
sim <- NULL
for (i in 1:nosim) {
sim$mean[i] <- mean(rexp(n, lamda))
sim$var[i] <- var(rexp(n, lamda))
}
hist(sim$mean,main = "Histogram of sample mean", xlab = "Sample mean" )
abline(v=1/lamda,col="red",lwd=3)
text(0.66,250,"Theoretical mean = 5", col = "red")
text(6.6,250,"Theoretical mean = 5", col = "red")
text(6.6,160,"Theoretical mean = 5", col = "red")
hist(sim$mean,main = "Histogram of sample mean",
xlab = "Sample mean", ylim = c(0,200) )
hist(sim$mean,main = "Histogram of sample mean",
xlab = "Sample mean", ylim = c(0,250) )
abline(v=1/lamda,col="red",lwd=3)
text(6,250,"Theoretical mean = 5", col = "red")
hist(sim$mean,main = "Histogram of sample mean",
xlab = "Sample mean", ylim = c(0,250) )
abline(v=1/lamda,col="red",lwd=3)
text(6.3,250,"Theoretical mean = 5", col = "red")
hist(sim$var,main = "Histogram of sample variance", xlab = "Sample variance")
abline(v=(1/lamda)^2,col="red",lwd=3)
text(30,350,"Theoretical variance = 25", col = "red")
text(50,350,"Theoretical variance = 25", col = "red")
text(60,350,"Theoretical variance = 25", col = "red")
hist(sim$var,main = "Histogram of sample variance", xlab = "Sample variance")
abline(v=(1/lamda)^2,col="red",lwd=3)
text(60,350,"Theoretical variance = 25", col = "red")
par(mfrow = c(1,2))
hist(rexp(1000,lamda))
hist(sim$mean)
par(mfrow = c(1,2))
hist(rexp(1000,lamda), main = "1000 random exponentials", xlab=(""))
hist(sim$mean, main = "1000 averages of 40 exponentials",xlab=(""))
ggplot(aes(sim$mean))+geom_hist()
library(ggplot2)
ggplot(aes(sim$mean))+geom_hist()
qplot(sim$mean)
qplot(sim$mean, geom = "density")
qplot(sim$mean, geom = c("density","hist"))
qplot(sim$mean, geom = c("density","histogram"))
qplot(sim$mean, geom = c("density","bar"))
qplot(sim$mean)+geom_density(col="red")
qplot(sim$mean, bin=20)+geom_density(col="red")
qplot(sim$mean,stat_bin(bins = 20))+geom_density(col="red")
qplot(sim$mean,stat_bin(bins = 20))
qplot(sim$mean) +geom_histogram(bins = 20)
qplot(sim$mean) +geom_histogram(bins = 15)
qplot(sim$mean) +geom_histogram(bins = 15)+geom_density(col="red",position = "stack")
qplot(sim$mean) +geom_histogram(bins = 15)
ggplot(sim$mean) +geom_histogram(bins = 15)
ggplot(aes(sim$mean)) +geom_histogram(bins = 15)
ggplot(data=sim,aes(mean)) +geom_histogram(bins = 15)
ggplot(data=sim)+aes(mean) +geom_histogram(bins = 15)
qplot(sim$mean) + geom_histogram(bins = 15,colour="black", fill="white")
+geom_density(col="red",position = "stack")
qplot(sim$mean) + geom_histogram(colour="black", fill="white")
+geom_density(col="red",position = "stack")
qplot(sim$mean) + geom_histogram(colour="black", fill="white")
+geom_density(position = "stack")
+geom_density(position = "stack")
+stat_density(geom = "path",position = "identity",col="red")
qplot(sim$mean) + geom_histogram(colour="black", fill="white")+stat_density(geom = "path",position = "identity",col="red")
qplot(sim$mean) + geom_histogram(colour="black", fill="white")+geom_density(position = "stack")
qplot(sim$mean) + geom_histogram(colour="black", fill="white")+geom_density(position = "stack", col="red")
ggplot(diamonds, aes(carat, fill = cut)) +
geom_density(position = "stack")
ggplot(diamonds, aes(carat, fill = cut)) +
geom_density()
ggplot(diamonds, aes(carat, fill = cut)) +
geom_density(position = "stack")
ggplot(sim$mean) + geom_histogram(colour="black", fill="white")+geom_density(position = "stack", col="red")
ggplot(aes(cut(sim$mean,20)) + geom_histogram(colour="black", fill="white")+geom_density(position = "stack", col="red")
)
ggplot(aes(cut(sim$mean,20))) + geom_histogram(colour="black", fill="white")+geom_density(position = "stack", col="red")
qplot(sim$mean) +geom_density(position = "stack", col="red")
library(lattice)
densityplot(sim$mean)
qplot(sim$mean) + geom_freqpoly()
qplot(sim$mean, colour="black", fill="white") + geom_freqpoly()
qplot(sim$mean, colour="black", fill="white") + geom_freqpoly()
g <- ggplot(sim, aes(x = mean)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- ggplot(sim, aes(x = unlist(mean))) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- ggplot(aes(x = sim$mean)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g
g <- g + stat_function(fun = dnorm, size = 2)
g
g <- ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g
g + geom_density()
g <- ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .20, binwidth=.3, colour = "black")
g + geom_density()
g + geom_density(position = "stack")
g + geom_density()
g <- ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g + geom_density()
g+stat_function(fun=dnorm(mean = 1/lamda, sd=1/lamda))
g+stat_function(fun=dnorm, args = list(mean = 1/lamda, sd=1/lamda))
g+stat_function(fun=dnorm, args = list(mean = 1/lamda, sd=1/lamda/sqrt(nosim)))
g <- g + geom_density()
g
sqrt(nosim)
g+stat_function(fun=dnorm, args = list(mean = 1/lamda, sd=1/lamda))
g+stat_function(fun=dnorm, args = list(mean = 1/lamda, sd=(1/lamda)^2)
)
g+stat_function(fun=dnorm, args = list(mean = 1/lamda, sd=1/lamda/10))
g+stat_function(fun=dnorm, args = list(mean = 1/lamda, sd=1/lamda/5))
delta.mean < (sim$mean-1/lamda)/(1/lamda/sqrt(nosim))
delta.mean <- (sim$mean-1/lamda)/(1/lamda/sqrt(nosim))
g <- ggplot() +aes(x = delta.mean)+ geom_histogram(alpha = .20, binwidth=.3, colour = "black")
g
delta.mean <- (sim$mean-1/lamda)/(1/lamda/sqrt(nosim))
g <- ggplot() +aes(x = delta.mean)+geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g
g + geom_density(position = "stack")
g+stat_function(fun=dnorm)
g+stat_function(fun=dnorm, args(mean=1/lamda),sd=1/lamda/sqrt(nosim))
sim <- NULL
for (i in 1:nosim) {
sim$mean[i] <- mean(rexp(n, lamda))
sim$var[i] <- var(rexp(n, lamda))
hist(sim$mean,main = "Histogram of sample mean",
xlab = "Sample mean", ylim = c(0,250) )
abline(v=1/lamda,col="red",lwd=3)
text(6.3,250,"Theoretical mean = 5", col = "red")
library(ggplot2)
g <- ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + geom_density()
g
)
G
g <- ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + geom_density()
g
lamda <- 0.2
n <- 40
nosim <- 1000
sim <- NULL
for (i in 1:nosim) {
sim$mean[i] <- mean(rexp(n, lamda))
sim$var[i] <- var(rexp(n, lamda))
}
g <- ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + geom_density()
g
g+stat_function(fun=dnorm, args(mean=1/lamda),sd=1/lamda/sqrt(nosim))
g+stat_function(fun=dnorm, args(mean=1/lamda,sd=1/lamda/sqrt(nosim))
)
g+stat_function(fun=dnorm, args=list(mean=1/lamda,sd=1/lamda/sqrt(nosim)))
g+stat_function(fun=dnorm, args=list(mean=1/lamda,sd=1/lamda/sqrt(n)))
g <- ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))+stat_function(fun=dnorm, args=list(mean=1/lamda,sd=1/lamda/sqrt(n)))+theme_bw()
g
g <- ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .10, binwidth=.3, colour = "black", aes(y = ..density..))+stat_function(fun=dnorm, args=list(mean=1/lamda,sd=1/lamda/sqrt(n)))+theme_bw()
ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .10, binwidth=.3, colour = "black", aes(y = ..density..))+stat_function(fun=dnorm, args=list(mean=1/lamda,sd=1/lamda/sqrt(n)))+theme_bw()
ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .80, binwidth=.3, colour = "black", aes(y = ..density..))+stat_function(fun=dnorm, args=list(mean=1/lamda,sd=1/lamda/sqrt(n)))+theme_bw()
ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .70, binwidth=.3, colour = "black", aes(y = ..density..))+stat_function(fun=dnorm, args=list(mean=1/lamda,sd=1/lamda/sqrt(n)))+theme_bw()
ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .70, col="green" binwidth=.3, colour = "black", aes(y = ..density..))+stat_function(fun=dnorm, args=list(mean=1/lamda,sd=1/lamda/sqrt(n)))+theme_bw()
ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .70, color="green" binwidth=.3, colour = "black", aes(y = ..density..))+stat_function(fun=dnorm, args=list(mean=1/lamda,sd=1/lamda/sqrt(n)))+theme_bw()
ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .70, binwidth=.3, colour = "black", aes(y = ..density..))+stat_function(fun=dnorm, args=list(mean=1/lamda,sd=1/lamda/sqrt(n)))+theme_bw()
ggplot() +aes(x = sim$mean)+ geom_histogram(alpha = .50, binwidth=.3, colour = "black", aes(y = ..density..))+stat_function(fun=dnorm, args=list(mean=1/lamda,sd=1/lamda/sqrt(n)))+theme_bw()
ggplot() +aes(x = sim$mean) +
geom_histogram(alpha = .50, binwidth=.3, colour = "black", aes(y = ..density..))+
stat_function(fun=dnorm,args=list(mean=1/lamda,sd=1/lamda/sqrt(n)))+
theme_bw()+labs(x="mean",title="")+
scale_colour_manual(values = c("Normal Distribution"))
ggplot() +aes(x = sim$mean) +
geom_histogram(alpha = .50, binwidth=.3, color = "mean", fill = "steelblue", aes(y = ..density..))+
stat_function(fun=dnorm,args=list(mean=1/lamda,sd=1/lamda/sqrt(n)),color="Normal")+
theme_bw()+labs(x="mean",title="")+
scale_colour_manual("Legend title", values = c("black", "red"))
ggplot() +aes(x = sim$mean) +
geom_histogram(alpha = .50, binwidth=.3, color = "mean", fill = "steelblue", aes(y = ..density..))+
stat_function(fun=dnorm,args=list(mean=1/lamda,sd=1/lamda/sqrt(n)),aes(color="Normal"))+
theme_bw()+labs(x="mean",title="")+
scale_colour_manual("Legend title", values = c("black", "red"))
ggplot() +aes(x = sim$mean) +
geom_histogram(alpha = .50, binwidth=.3, fill = "steelblue", aes(y = ..density..))+
stat_function(fun=dnorm,args=list(mean=1/lamda,sd=1/lamda/sqrt(n)),aes(color="Normal"))+
theme_bw()+labs(x="mean",title="")+
scale_colour_manual("Legend title", values = c("black"))
ggplot() +aes(x = sim$mean) +
geom_histogram(alpha = .50, binwidth=.3, color="black", fill = "steelblue", aes(y = ..density..))+
stat_function(fun=dnorm,args=list(mean=1/lamda,sd=1/lamda/sqrt(n)),aes(color="Normal Dist"))+
theme_bw()+labs(x="mean",title="")+
scale_colour_manual(values = c("black"))
rm(list=ls())
library(datasets)
data("ChickWeight")
library(reshape2)
head(ChickWeight)
head(chickwts)
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = "weight")
head(wideCW)
names(wideCW)[-(1:2)] <- paste("time",names(wideCW)[-(1:2)], sep = "")
head(wideCW)
library(dplyr)
wideCW <- mutate(wideCW,
gain=time21-time0)
head(wideCW)
pbinom(6,8,0.5)
pbinom(6,8,0.5)-1
pbinom(6,8,0.5,lower.tail = F)
qt(p = 0.975,df = 8)
qt(p = 0.975,df = 8)*30+1100
qt(p = 0.025,df = 8)*30+1100
qt(p = 0.975,df = 8)*30/3+1100
qt(p = 0.025,df = 8)*30/3+1100
6/qt(p=0.975,df=8)
x=3
y=5
sx=0.6
sy=0.68
sp=(9*sx+9*sy)/18
sp=sqrt(sp)
pt(0.975,df=18)*sp/sqrt(0.2)-2
pt(0.025,df=18)*sp/sqrt(0.2)-2
pt(0.975,df=18)
pt(0.975,df=18)*sp*sqrt(0.2)-2
pt(0.025,df=18)*sp*sqrt(0.2)-2
sp*sqrt(0.2)
pt(0.975,df=18)
pt(0.025,df=18)
pt(0.975,df=18)*sp*sqrt(0.2)-2
pt(0.025,df=18)*sp*sqrt(0.2)-2
-pt(0.975,df=18)*sp*sqrt(0.2)-2
-pt(0.025,df=18)*sp*sqrt(0.2)-2
-pt(0.95,df=18)*sp*sqrt(0.2)-2
+pt(0.95,df=18)*sp*sqrt(0.2)-2
3-5+c(-1,1)*qt(0.975)*sp*(0.2)^0.5
3-5+c(-1,1)*qt(0.975,18)*sp*(0.2)^0.5
x=4
y=6
sx=0.5
sy=2
x-y+c(-1,1)*pnorm(0.975)*(sx^2/100+sy^2/100)^0.5
y-x+c(-1,1)*pnorm(0.975)*(sx^2/100+sy^2/100)^0.5
x=-3
y=1
sx=1.5
sy=1.8
sp=(8*sx^2+8*sy^2)/16
sp=sqrt(sp)
x-y+c(-1,1)*qt(0.95,16)*sp*(2/9)^0.5
c(-1,1)*qt(p = 0.975,df = 8)*30/3+1100
6/qt(p=0.975,df=8)
x=3
y=5
sx=0.6
sy=0.68
sp=(9*sx+9*sy)/18
sp=sqrt(sp)
3-5+c(-1,1)*qt(0.975,18)*sp*(0.2)^0.5
x=-3
y=1
sx=1.5
sy=1.8
sp=(8*sx^2+8*sy^2)/16
sp=sqrt(sp)
x-y+c(-1,1)*qt(0.95,16)*sp*(2/9)^0.5
mu0 <- 30
mua <- seq(30,35,by = 0.2)
alpha <- 0.05
z <- qnorm(1-alpha)
sigma <- 4
for (i in 1:5)
power[[paste("n",2^(2+i),sep="")]] <- pnorm(mu0+z*sigma/sqrt(2^(2+i)),
mean=mua, sigma=sigma/sqrt(2^(2+i)))
for (i in 1:5)
power[[paste("n",2^(2+i),sep="")]] <- pnorm(mu0+z*sigma/sqrt(2^(2+i)),
mean=mua, sd=sigma/sqrt(2^(2+i)))
i=1
power[[paste("n",2^(2+i),sep="")]] <- pnorm(mu0+z*sigma/sqrt(2^(2+i)),
mean=mua, sd=sigma/sqrt(2^(2+i)))
power[[paste("n",2^(2+i),sep="")]]
paste("n",2^(2+i),sep="")
power <- data.frame()
power[[paste("n",2^(2+i),sep="")]] <- pnorm(mu0+z*sigma/sqrt(2^(2+i)),
mean=mua, sd=sigma/sqrt(2^(2+i)))
power[[paste("n",2^(2+i),sep="")]] <- pnorm(mu0+z*sigma/sqrt(2^(2+i)),
mean=mua, sd=sigma/sqrt(2^(2+i)))
power <- NULL
power[[paste("n",2^(2+i),sep="")]] <- pnorm(mu0+z*sigma/sqrt(2^(2+i)),
mean=mua, sd=sigma/sqrt(2^(2+i)))
for (i in 1:5)
power[[paste("n",2^(2+i),sep="")]] <- pnorm(mu0+z*sigma/sqrt(2^(2+i)),
mean=mua, sd=sigma/sqrt(2^(2+i)))
power$alpha <- alpha
power$alpha <- mua
names(power$alpha)
names(power)
names(power)[6]<-"mua"
names(airquality) <- tolower(names(airquality))
melt(airquality, id=c("month", "day"))
power <- reshape2::melt(power, id="mua")
View(power)
power <- NULL
for (i in 1:5)
power[[paste("n",2^(2+i),sep="")]] <- pnorm(mu0+z*sigma/sqrt(2^(2+i)),
mean=mua, sd=sigma/sqrt(2^(2+i)))
power$mua <- mua
power2 <- reshape2::melt(power, id.vars="mua")
View(power2)
power2 <- reshape2::melt(power)
View(power2)
power2 <- reshape2::melt(power, id.vars=6)
head(ChickWeight)
head(melt(ChickWeight, id=2:4))
power2 <- reshape2::melt(power, id=6)
library(reshape2)
power2 <- melt(power, id=6)
power2 <- melt(power, id='mua')
power <- as.data.frame(power)
power2 <- melt(power, id='mua')
ggplot(data = power, aes(mua, value))+geom_line(color=variable)
ggplot(data = power, aes(mua, value,color=variable))+geom_line()
ggplot(data = power, aes(mua, value))+geom_line(aes(color=variable))
ggplot(data = power, aes(mua, value))+geom_line(aes(col = variable))
ggplot(data = power2, aes(mua, value))+geom_line(aes(col = variable))
power <- NULL
for (i in 1:5)
power[[paste("n",2^(2+i),sep="")]] <- pnorm(mu0+z*sigma/sqrt(2^(2+i)),
mean=mua, sd=sigma/sqrt(2^(2+i)),lower.tail = F)
power$mua <- mua
power <- as.data.frame(power)
power2 <- reshape2::melt(power, id.vars="mua")
ggplot(data = power2, aes(mua, value))+geom_line(aes(col = variable))
mu0=30
myplot <- function(sigma, mu, n, alpha) {
g = ggplot(data.frame(mu=c(27,36)),aes(x=mu))
g = g + stat_function(fun=dorm, geom = "line",
args = list(mean=mu0,
sd = sigm/sqrt(n)),
size = 2, col = "red")
g = g + stat_function(fun=dorm, geom = "line",
args = list(mean=mua,
sd = sigm/sqrt(n)),
size = 2, col = "blue")
xitc = mu0 + qnorm(1-alpha)*sigma/sqrt(n)
g = g + geom_vline(xintercept = xitc, size = 3)
g
}
maniplate(myplot(sigma,mua, n, alpha),
sigma=slider(1,10, step = 1, initial = 4),
mua=slider(30,35, step = 1, initial = 32),
n=slider(4,100, step = 4, initial = 40),
alpha=slider(0.05,0.5, step = 0.05, initial = 0.05)
)
manipulate(myplot(sigma,mua, n, alpha),
sigma=slider(1,10, step = 1, initial = 4),
mua=slider(30,35, step = 1, initial = 32),
n=slider(4,100, step = 4, initial = 40),
alpha=slider(0.05,0.5, step = 0.05, initial = 0.05)
)
library(manipulate)
mu0=30
myplot <- function(sigma, mu, n, alpha) {
g = ggplot(data.frame(mu=c(27,36)),aes(x=mu))
g = g + stat_function(fun=dorm, geom = "line",
args = list(mean=mu0,
sd = sigm/sqrt(n)),
size = 2, col = "red")
g = g + stat_function(fun=dorm, geom = "line",
args = list(mean=mua,
sd = sigm/sqrt(n)),
size = 2, col = "blue")
xitc = mu0 + qnorm(1-alpha)*sigma/sqrt(n)
g = g + geom_vline(xintercept = xitc, size = 3)
g
}
manipulate(myplot(sigma,mua, n, alpha),
sigma=slider(1,10, step = 1, initial = 4),
mua=slider(30,35, step = 1, initial = 32),
n=slider(4,100, step = 4, initial = 40),
alpha=slider(0.05,0.5, step = 0.05, initial = 0.05)
)
myplot <- function(sigma, mu, n, alpha) {
g = ggplot(data.frame(mu=c(27,36)),aes(x=mu))
g = g + stat_function(fun=dnorm, geom = "line",
args = list(mean=mu0,
sd = sigm/sqrt(n)),
size = 2, col = "red")
g = g + stat_function(fun=dnorm, geom = "line",
args = list(mean=mua,
sd = sigm/sqrt(n)),
size = 2, col = "blue")
xitc = mu0 + qnorm(1-alpha)*sigma/sqrt(n)
g = g + geom_vline(xintercept = xitc, size = 3)
g
}
manipulate(myplot(sigma,mua, n, alpha),
sigma=slider(1,10, step = 1, initial = 4),
mua=slider(30,35, step = 1, initial = 32),
n=slider(4,100, step = 4, initial = 40),
alpha=slider(0.05,0.5, step = 0.05, initial = 0.05)
)
myplot <- function(sigma, mu, n, alpha) {
g = ggplot(data.frame(mu=c(27,36)),aes(x=mu))
g = g + stat_function(fun=dnorm, geom = "line",
args = list(mean=mu0,
sd = sigma/sqrt(n)),
size = 2, col = "red")
g = g + stat_function(fun=dnorm, geom = "line",
args = list(mean=mua,
sd = sigma/sqrt(n)),
size = 2, col = "blue")
xitc = mu0 + qnorm(1-alpha)*sigma/sqrt(n)
g = g + geom_vline(xintercept = xitc, size = 3)
g
}
manipulate(myplot(sigma,mua, n, alpha),
sigma=slider(1,10, step = 1, initial = 4),
mua=slider(30,35, step = 1, initial = 32),
n=slider(4,100, step = 4, initial = 40),
alpha=slider(0.05,0.5, step = 0.05, initial = 0.05)
)
myplot <- function(sigma, mua, n, alpha) {
g = ggplot(data.frame(mu=c(27,36)),aes(x=mu))
g = g + stat_function(fun=dnorm, geom = "line",
args = list(mean=mu0,
sd = sigma/sqrt(n)),
size = 2, col = "red")
g = g + stat_function(fun=dnorm, geom = "line",
args = list(mean=mua,
sd = sigma/sqrt(n)),
size = 2, col = "blue")
xitc = mu0 + qnorm(1-alpha)*sigma/sqrt(n)
g = g + geom_vline(xintercept = xitc, size = 3)
g
}
manipulate(myplot(sigma,mua, n, alpha),
sigma=slider(1,10, step = 1, initial = 4),
mua=slider(30,35, step = 1, initial = 32),
n=slider(4,100, step = 4, initial = 40),
alpha=slider(0.05,0.5, step = 0.05, initial = 0.05)
)
subdata <- InsectSprays[InsectSprays$spray %in% c("B","C"),]
str(subdata)
y <- subdata$count
group <- as.character(subdata$spray)
group
testStat <- function(w,g) mean(w[g=="B"])-mean(w[g=="C"])
observedStat <- testStat(y,group)
observedStat
sample(group)
permutations <- sapply(1:10000, function(i) testStat(y,sample(group)))
hist(permutations)
par()
par(mfrow=c(1,1))
hist(permutations)
library(slidify)
setwd("~/Desktop/Coursera/Fao/presentation/")
author("FAO App")
shiny::runApp('~/Desktop/Coursera/Fao/app2')
rm(list=ls())
load("~/Desktop/Coursera/Fao/app2/FAO.Rdata")
View(FAO)
names(FAO)
publish(title = 'faoapp', 'index.html', host = 'rpubs')
slidify('index.Rmd', options = list(embed = TRUE))
getwd
getwd()
source('~/Desktop/Coursera/Fao/app2/tops.R')
source('~/Desktop/Coursera/Fao/app2/countries.R')
load('~/Desktop/Coursera/Fao/app2/FAO.Rdata')
tops()
p <- gvisPieChart(tops(),options =list(width = 600,height = 400, pieHole=0.5))
plot(p)
View(tops)
View(tops)
m <- gvisPieChart(tops(),options =list(width = 600,height = 400, pieHole=0.5))
print(m$html)
m$html[-1]
library(dplyr)
library(tidyr)
library(googleVis)
source('~/Desktop/Coursera/Fao/app2/tops.R')
m <- gvisPieChart(tops(),options =list(width = 600,height = 400, pieHole=0.5))
plot(m)
print(m)
View(countries)
source('~/Desktop/Coursera/Fao/app2/countries.R')
View(countries)
m <- gvisMotionChart(countries(),"Country","Year",options = list(width = 800,height = 500))
print(m,'chart')
m <- gvisMotionChart(countries(),"Country","Year",options = list(width = 800,height = 500))
print(m,'chart')
plot(m)
View(countries)
m <- gvisMotionChart(countries(item = "wheat", FAO=FAO),"Country","Year",options = list(width = 800,height = 500))
source('~/Desktop/Coursera/Fao/app2/countries.R')
m <- gvisPieChart(tops(),options =list(width = 600,height = 400, pieHole=0.5))
publish(title = 'faoapp', 'index.html', host = 'rpubs')
View(countries)
View(countries)
